package org.chorus_oss.chorus.registry

import org.chorus_oss.chorus.block.BlockID
import org.chorus_oss.chorus.item.*
import org.chorus_oss.chorus.item.customitem.CustomItem
import org.chorus_oss.chorus.item.customitem.CustomItemDefinition
import org.chorus_oss.chorus.item.ItemHarnessBlue
import org.chorus_oss.chorus.nbt.NBTIO.readCompressed
import org.chorus_oss.chorus.nbt.tag.CompoundTag
import org.chorus_oss.chorus.plugin.Plugin
import org.chorus_oss.chorus.registry.ItemRuntimeIdRegistry.RuntimeEntry
import org.jetbrains.annotations.UnmodifiableView
import java.io.IOException
import java.util.*
import java.util.concurrent.atomic.AtomicBoolean
import kotlin.reflect.KClass
import kotlin.reflect.full.createInstance
import kotlin.reflect.full.isSubclassOf

class ItemRegistry : ItemID, IRegistry<String, Item?, KClass<out Item>> {
    val customItemDefinition: @UnmodifiableView MutableMap<String?, CustomItemDefinition?>
        get() = Collections.unmodifiableMap(CUSTOM_ITEM_DEFINITIONS)

    override fun init() {
        if (isLoad.getAndSet(true)) return
        try {
            register(ItemID.ACACIA_BOAT, ItemAcaciaBoat::class)
            register(ItemID.ACACIA_CHEST_BOAT, ItemAcaciaChestBoat::class)
            register(ItemID.ACACIA_SIGN, ItemAcaciaSign::class)
            register(ItemID.AGENT_SPAWN_EGG, ItemAgentSpawnEgg::class)
            register(ItemID.ALLAY_SPAWN_EGG, ItemAllaySpawnEgg::class)
            register(ItemID.AMETHYST_SHARD, ItemAmethystShard::class)
            register(ItemID.ANGLER_POTTERY_SHERD, ItemAnglerPotterySherd::class)
            register(ItemID.ANVIL, ItemAnvil::class)
            register(ItemID.APPLE, ItemApple::class)
            register(ItemID.ARCHER_POTTERY_SHERD, ItemArcherPotterySherd::class)
            register(ItemID.ARMADILLO_SCUTE, ItemArmadilloScute::class)
            register(ItemID.ARMADILLO_SPAWN_EGG, ItemArmadilloSpawnEgg::class)
            register(ItemID.ARMOR_STAND, ItemArmorStand::class)
            register(ItemID.ARMS_UP_POTTERY_SHERD, ItemArmsUpPotterySherd::class)
            register(ItemID.ARROW, ItemArrow::class)
            register(ItemID.AXOLOTL_BUCKET, ItemAxolotlBucket::class)
            register(ItemID.AXOLOTL_SPAWN_EGG, ItemAxolotlSpawnEgg::class)
            register(ItemID.BAKED_POTATO, ItemBakedPotato::class)
            register(ItemID.BALLOON, ItemBalloon::class)
            register(ItemID.BAMBOO_CHEST_RAFT, ItemBambooChestRaft::class)
            register(ItemID.BAMBOO_RAFT, ItemBambooRaft::class)
            register(ItemID.BAMBOO_SIGN, ItemBambooSign::class)
            register(ItemID.BANNER, ItemBanner::class)
            register(ItemID.BANNER_PATTERN, ItemBannerPattern::class)
            register(ItemID.BAT_SPAWN_EGG, ItemBatSpawnEgg::class)
            register(ItemID.BEE_SPAWN_EGG, ItemBeeSpawnEgg::class)
            register(ItemID.BEEF, ItemBeef::class)
            register(ItemID.BEETROOT_SEEDS, ItemBeetrootSeeds::class)
            register(ItemID.BEETROOT_SOUP, ItemBeetrootSoup::class)
            register(ItemID.BIRCH_BOAT, ItemBirchBoat::class)
            register(ItemID.BIRCH_CHEST_BOAT, ItemBirchChestBoat::class)
            register(ItemID.BIRCH_SIGN, ItemBirchSign::class)
            register(ItemID.BLACK_BUNDLE, ItemBlackBundle::class)
            register(ItemID.BLACK_DYE, ItemBlackDye::class)
            register(ItemID.BLADE_POTTERY_SHERD, ItemBladePotterySherd::class)
            register(ItemID.BLAZE_POWDER, ItemBlazePowder::class)
            register(ItemID.BLAZE_ROD, ItemBlazeRod::class)
            register(ItemID.BLAZE_SPAWN_EGG, ItemBlazeSpawnEgg::class)
            register(ItemID.BLEACH, ItemBleach::class)
            register(ItemID.BLUE_BUNDLE, ItemBlueBundle::class)
            register(ItemID.BLUE_DYE, ItemBlueDye::class)
            register(ItemID.BLUE_EGG, ItemBlueEgg::class)
            register(ItemID.BOAT, ItemBoat::class)
            register(ItemID.BOGGED_SPAWN_EGG, ItemBoggedSpawnEgg::class)
            register(ItemID.BOLT_ARMOR_TRIM_SMITHING_TEMPLATE, ItemBoltArmorTrimSmithingTemplate::class)
            register(ItemID.BONE, ItemBone::class)
            register(ItemID.BONE_MEAL, ItemBoneMeal::class)
            register(ItemID.BOOK, ItemBook::class)
            register(ItemID.BORDURE_INDENTED_BANNER_PATTERN, ItemBordureIndentedBannerPattern::class)
            register(ItemID.BOW, ItemBow::class)
            register(ItemID.BOWL, ItemBowl::class)
            register(ItemID.BREAD, ItemBread::class)
            register(ItemID.BREEZE_ROD, ItemBreezeRod::class)
            register(ItemID.BREEZE_SPAWN_EGG, ItemBreezeSpawnEgg::class)
            register(ItemID.BREWER_POTTERY_SHERD, ItemBrewerPotterySherd::class)
            register(ItemID.BRICK, ItemBrick::class)
            register(ItemID.BROWN_BUNDLE, ItemBrownBundle::class)
            register(ItemID.BROWN_DYE, ItemBrownDye::class)
            register(ItemID.BROWN_EGG, ItemBrownEgg::class)
            register(ItemID.BRUSH, ItemBrush::class)
            register(ItemID.BUCKET, ItemBucket::class)
            register(ItemID.BUNDLE, ItemBundle::class)
            register(ItemID.BURN_POTTERY_SHERD, ItemBurnPotterySherd::class)
            register(ItemID.CAMEL_SPAWN_EGG, ItemCamelSpawnEgg::class)
            register(ItemID.CARPET, ItemCarpet::class)
            register(ItemID.CARROT, ItemCarrot::class)
            register(ItemID.CARROT_ON_A_STICK, ItemCarrotOnAStick::class)
            register(ItemID.CAT_SPAWN_EGG, ItemCatSpawnEgg::class)
            register(ItemID.CAVE_SPIDER_SPAWN_EGG, ItemCaveSpiderSpawnEgg::class)
            register(ItemID.CHAINMAIL_BOOTS, ItemChainmailBoots::class)
            register(ItemID.CHAINMAIL_CHESTPLATE, ItemChainmailChestplate::class)
            register(ItemID.CHAINMAIL_HELMET, ItemChainmailHelmet::class)
            register(ItemID.CHAINMAIL_LEGGINGS, ItemChainmailLeggings::class)
            register(ItemID.CHARCOAL, ItemCharcoal::class)
            register(ItemID.CHERRY_BOAT, ItemCherryBoat::class)
            register(ItemID.CHERRY_CHEST_BOAT, ItemCherryChestBoat::class)
            register(ItemID.CHERRY_SIGN, ItemCherrySign::class)
            register(ItemID.CHEST_BOAT, ItemChestBoat::class)
            register(ItemID.CHEST_MINECART, ItemChestMinecart::class)
            register(ItemID.CHICKEN, ItemChicken::class)
            register(ItemID.CHICKEN_SPAWN_EGG, ItemChickenSpawnEgg::class)
            register(ItemID.CHORUS_FRUIT, ItemChorusFruit::class)
            register(ItemID.CLAY_BALL, ItemClayBall::class)
            register(ItemID.CLOCK, ItemClock::class)
            register(ItemID.COAL, ItemCoal::class)
            register(ItemID.COAST_ARMOR_TRIM_SMITHING_TEMPLATE, ItemCoastArmorTrimSmithingTemplate::class)
            register(ItemID.COBBLESTONE_WALL, ItemCobblestoneWall::class)
            register(ItemID.COCOA_BEANS, ItemCocoaBeans::class)
            register(ItemID.COD, ItemCod::class)
            register(ItemID.COD_BUCKET, ItemCodBucket::class)
            register(ItemID.COD_SPAWN_EGG, ItemCodSpawnEgg::class)
            register(ItemID.COMMAND_BLOCK_MINECART, ItemCommandBlockMinecart::class)
            register(ItemID.COMPARATOR, ItemComparator::class)
            register(ItemID.COMPASS, ItemCompass::class)
            register(ItemID.COMPOUND, ItemCompound::class)
            register(ItemID.CONCRETE, ItemConcrete::class)
            register(ItemID.CONCRETE_POWDER, ItemConcretePowder::class)
            register(ItemID.COOKED_BEEF, ItemCookedBeef::class)
            register(ItemID.COOKED_CHICKEN, ItemCookedChicken::class)
            register(ItemID.COOKED_COD, ItemCookedCod::class)
            register(ItemID.COOKED_MUTTON, ItemCookedMutton::class)
            register(ItemID.COOKED_PORKCHOP, ItemCookedPorkchop::class)
            register(ItemID.COOKED_RABBIT, ItemCookedRabbit::class)
            register(ItemID.COOKED_SALMON, ItemCookedSalmon::class)
            register(ItemID.COOKIE, ItemCookie::class)
            register(ItemID.COPPER_INGOT, ItemCopperIngot::class)
            register(ItemID.CORAL, ItemCoral::class)
            register(ItemID.CORAL_BLOCK, ItemCoralBlock::class)
            register(ItemID.CORAL_FAN, ItemCoralFan::class)
            register(ItemID.CORAL_FAN_DEAD, ItemCoralFanDead::class)
            register(ItemID.COW_SPAWN_EGG, ItemCowSpawnEgg::class)
            register(ItemID.CREAKING_SPAWN_EGG, ItemCreakingSpawnEgg::class)
            register(ItemID.CREEPER_BANNER_PATTERN, ItemCreeperBannerPattern::class)
            register(ItemID.CREEPER_HEAD, ItemCreeperHead::class)
            register(ItemID.CREEPER_SPAWN_EGG, ItemCreeperSpawnEgg::class)
            register(ItemID.CRIMSON_SIGN, ItemCrimsonSign::class)
            register(ItemID.CROSSBOW, ItemCrossbow::class)
            register(ItemID.CYAN_BUNDLE, ItemCyanBundle::class)
            register(ItemID.CYAN_DYE, ItemCyanDye::class)
            register(ItemID.DANGER_POTTERY_SHERD, ItemDangerPotterySherd::class)
            register(ItemID.DARK_OAK_BOAT, ItemDarkOakBoat::class)
            register(ItemID.DARK_OAK_CHEST_BOAT, ItemDarkOakChestBoat::class)
            register(ItemID.DARK_OAK_SIGN, ItemDarkOakSign::class)
            register(ItemID.DIAMOND, ItemDiamond::class)
            register(ItemID.DIAMOND_AXE, ItemDiamondAxe::class)
            register(ItemID.DIAMOND_BOOTS, ItemDiamondBoots::class)
            register(ItemID.DIAMOND_CHESTPLATE, ItemDiamondChestplate::class)
            register(ItemID.DIAMOND_HELMET, ItemDiamondHelmet::class)
            register(ItemID.DIAMOND_HOE, ItemDiamondHoe::class)
            register(ItemID.DIAMOND_HORSE_ARMOR, ItemDiamondHorseArmor::class)
            register(ItemID.DIAMOND_LEGGINGS, ItemDiamondLeggings::class)
            register(ItemID.DIAMOND_PICKAXE, ItemDiamondPickaxe::class)
            register(ItemID.DIAMOND_SHOVEL, ItemDiamondShovel::class)
            register(ItemID.DIAMOND_SWORD, ItemDiamondSword::class)
            register(ItemID.DIRT, ItemDirt::class)
            register(ItemID.DISC_FRAGMENT_5, ItemDiscFragment5::class)
            register(ItemID.DOLPHIN_SPAWN_EGG, ItemDolphinSpawnEgg::class)
            register(ItemID.DONKEY_SPAWN_EGG, ItemDonkeySpawnEgg::class)
            register(ItemID.DOUBLE_PLANT, ItemDoublePlant::class)
            register(ItemID.DRAGON_BREATH, ItemDragonBreath::class)
            register(ItemID.DRAGON_HEAD, ItemDragonHead::class)
            register(ItemID.DRIED_KELP, ItemDriedKelp::class)
            register(ItemID.DROWNED_SPAWN_EGG, ItemDrownedSpawnEgg::class)
            register(ItemID.DUNE_ARMOR_TRIM_SMITHING_TEMPLATE, ItemDuneArmorTrimSmithingTemplate::class)
            register(ItemID.DYE, ItemDye::class)
            register(ItemID.ECHO_SHARD, ItemEchoShard::class)
            register(ItemID.EGG, ItemEgg::class)
            register(ItemID.ELDER_GUARDIAN_SPAWN_EGG, ItemElderGuardianSpawnEgg::class)
            register(ItemID.ELYTRA, ItemElytra::class)
            register(ItemID.EMERALD, ItemEmerald::class)
            register(ItemID.EMPTY_MAP, ItemEmptyMap::class)
            register(ItemID.ENCHANTED_BOOK, ItemEnchantedBook::class)
            register(ItemID.ENCHANTED_GOLDEN_APPLE, ItemEnchantedGoldenApple::class)
            register(ItemID.END_CRYSTAL, ItemEndCrystal::class)
            register(ItemID.ENDER_DRAGON_SPAWN_EGG, ItemEnderDragonSpawnEgg::class)
            register(ItemID.ENDER_EYE, ItemEnderEye::class)
            register(ItemID.ENDER_PEARL, ItemEnderPearl::class)
            register(ItemID.ENDERMAN_SPAWN_EGG, ItemEndermanSpawnEgg::class)
            register(ItemID.ENDERMITE_SPAWN_EGG, ItemEndermiteSpawnEgg::class)
            register(ItemID.EVOKER_SPAWN_EGG, ItemEvokerSpawnEgg::class)
            register(ItemID.EXPERIENCE_BOTTLE, ItemExperienceBottle::class)
            register(ItemID.EXPLORER_POTTERY_SHERD, ItemExplorerPotterySherd::class)
            register(ItemID.EYE_ARMOR_TRIM_SMITHING_TEMPLATE, ItemEyeArmorTrimSmithingTemplate::class)
            register(ItemID.FEATHER, ItemFeather::class)
            register(ItemID.FENCE, ItemFence::class)
            register(ItemID.FERMENTED_SPIDER_EYE, ItemFermentedSpiderEye::class)
            register(ItemID.FIELD_MASONED_BANNER_PATTERN, ItemFieldMasonedBannerPattern::class)
            register(ItemID.FILLED_MAP, ItemFilledMap::class)
            register(ItemID.FIRE_CHARGE, ItemFireCharge::class)
            register(ItemID.FIREWORK_ROCKET, ItemFireworkRocket::class)
            register(ItemID.FIREWORK_STAR, ItemFireworkStar::class)
            register(ItemID.FISHING_ROD, ItemFishingRod::class)
            register(ItemID.FLINT, ItemFlint::class)
            register(ItemID.FLINT_AND_STEEL, ItemFlintAndSteel::class)
            register(ItemID.FLOW_ARMOR_TRIM_SMITHING_TEMPLATE, ItemFlowArmorTrimSmithingTemplate::class)
            register(ItemID.FLOW_BANNER_PATTERN, ItemFlowBannerPattern::class)
            register(ItemID.FLOW_POTTERY_SHERD, ItemFlowPotterySherd::class)
            register(ItemID.FLOWER_BANNER_PATTERN, ItemFlowerBannerPattern::class)
            register(ItemID.FOX_SPAWN_EGG, ItemFoxSpawnEgg::class)
            register(ItemID.FRIEND_POTTERY_SHERD, ItemFriendPotterySherd::class)
            register(ItemID.FROG_SPAWN_EGG, ItemFrogSpawnEgg::class)
            register(ItemID.GHAST_SPAWN_EGG, ItemGhastSpawnEgg::class)
            register(ItemID.GHAST_TEAR, ItemGhastTear::class)
            register(ItemID.GLASS_BOTTLE, ItemGlassBottle::class)
            register(ItemID.GLISTERING_MELON_SLICE, ItemGlisteringMelonSlice::class)
            register(ItemID.GLOBE_BANNER_PATTERN, ItemGlobeBannerPattern::class)
            register(ItemID.GLOW_BERRIES, ItemGlowBerries::class)
            register(ItemID.GLOW_INK_SAC, ItemGlowInkSac::class)
            register(ItemID.GLOW_SQUID_SPAWN_EGG, ItemGlowSquidSpawnEgg::class)
            register(ItemID.GLOW_STICK, ItemGlowStick::class)
            register(ItemID.GLOWSTONE_DUST, ItemGlowstoneDust::class)
            register(ItemID.GOAT_HORN, ItemGoatHorn::class)
            register(ItemID.GOAT_SPAWN_EGG, ItemGoatSpawnEgg::class)
            register(ItemID.GOLD_INGOT, ItemGoldIngot::class)
            register(ItemID.GOLD_NUGGET, ItemGoldNugget::class)
            register(ItemID.GOLDEN_APPLE, ItemGoldenApple::class)
            register(ItemID.GOLDEN_AXE, ItemGoldenAxe::class)
            register(ItemID.GOLDEN_BOOTS, ItemGoldenBoots::class)
            register(ItemID.GOLDEN_CARROT, ItemGoldenCarrot::class)
            register(ItemID.GOLDEN_CHESTPLATE, ItemGoldenChestplate::class)
            register(ItemID.GOLDEN_HELMET, ItemGoldenHelmet::class)
            register(ItemID.GOLDEN_HOE, ItemGoldenHoe::class)
            register(ItemID.GOLDEN_HORSE_ARMOR, ItemGoldenHorseArmor::class)
            register(ItemID.GOLDEN_LEGGINGS, ItemGoldenLeggings::class)
            register(ItemID.GOLDEN_PICKAXE, ItemGoldenPickaxe::class)
            register(ItemID.GOLDEN_SHOVEL, ItemGoldenShovel::class)
            register(ItemID.GOLDEN_SWORD, ItemGoldenSword::class)
            register(ItemID.GRAY_BUNDLE, ItemGrayBundle::class)
            register(ItemID.GRAY_DYE, ItemGrayDye::class)
            register(ItemID.GREEN_BUNDLE, ItemGreenBundle::class)
            register(ItemID.GREEN_DYE, ItemGreenDye::class)
            register(ItemID.GUARDIAN_SPAWN_EGG, ItemGuardianSpawnEgg::class)
            register(ItemID.GUNPOWDER, ItemGunpowder::class)
            register(ItemID.GUSTER_BANNER_PATTERN, ItemGusterBannerPattern::class)
            register(ItemID.GUSTER_POTTERY_SHERD, ItemGusterPotterySherd::class)
            register(ItemID.HARD_STAINED_GLASS, ItemHardStainedGlass::class)
            register(ItemID.HARD_STAINED_GLASS_PANE, ItemHardStainedGlassPane::class)
            register(ItemID.HEART_OF_THE_SEA, ItemHeartOfTheSea::class)
            register(ItemID.HEART_POTTERY_SHERD, ItemHeartPotterySherd::class)
            register(ItemID.HEARTBREAK_POTTERY_SHERD, ItemHeartbreakPotterySherd::class)
            register(ItemID.HOGLIN_SPAWN_EGG, ItemHoglinSpawnEgg::class)
            register(ItemID.HONEY_BOTTLE, ItemHoneyBottle::class)
            register(ItemID.HONEYCOMB, ItemHoneycomb::class)
            register(ItemID.HOPPER_MINECART, ItemHopperMinecart::class)
            register(ItemID.HORSE_SPAWN_EGG, ItemHorseSpawnEgg::class)
            register(ItemID.HOST_ARMOR_TRIM_SMITHING_TEMPLATE, ItemHostArmorTrimSmithingTemplate::class)
            register(ItemID.HOWL_POTTERY_SHERD, ItemHowlPotterySherd::class)
            register(ItemID.HUSK_SPAWN_EGG, ItemHuskSpawnEgg::class)
            register(ItemID.ICE_BOMB, ItemIceBomb::class)
            register(ItemID.INK_SAC, ItemInkSac::class)
            register(ItemID.IRON_AXE, ItemIronAxe::class)
            register(ItemID.IRON_BOOTS, ItemIronBoots::class)
            register(ItemID.IRON_CHESTPLATE, ItemIronChestplate::class)
            register(ItemID.IRON_GOLEM_SPAWN_EGG, ItemIronGolemSpawnEgg::class)
            register(ItemID.IRON_HELMET, ItemIronHelmet::class)
            register(ItemID.IRON_HOE, ItemIronHoe::class)
            register(ItemID.IRON_HORSE_ARMOR, ItemIronHorseArmor::class)
            register(ItemID.IRON_INGOT, ItemIronIngot::class)
            register(ItemID.IRON_LEGGINGS, ItemIronLeggings::class)
            register(ItemID.IRON_NUGGET, ItemIronNugget::class)
            register(ItemID.IRON_PICKAXE, ItemIronPickaxe::class)
            register(ItemID.IRON_SHOVEL, ItemIronShovel::class)
            register(ItemID.IRON_SWORD, ItemIronSword::class)
            register(ItemID.JUNGLE_BOAT, ItemJungleBoat::class)
            register(ItemID.JUNGLE_CHEST_BOAT, ItemJungleChestBoat::class)
            register(ItemID.JUNGLE_SIGN, ItemJungleSign::class)
            register(ItemID.LAPIS_LAZULI, ItemLapisLazuli::class)
            register(ItemID.LAVA_BUCKET, ItemLavaBucket::class)
            register(ItemID.LEAD, ItemLead::class)
            register(ItemID.LEATHER, ItemLeather::class)
            register(ItemID.LEATHER_BOOTS, ItemLeatherBoots::class)
            register(ItemID.LEATHER_CHESTPLATE, ItemLeatherChestplate::class)
            register(ItemID.LEATHER_HELMET, ItemLeatherHelmet::class)
            register(ItemID.LEATHER_HORSE_ARMOR, ItemLeatherHorseArmor::class)
            register(ItemID.LEATHER_LEGGINGS, ItemLeatherLeggings::class)
            register(ItemID.LEAVES, ItemLeaves::class)
            register(ItemID.LEAVES2, ItemLeaves2::class)
            register(ItemID.LIGHT_BLUE_BUNDLE, ItemLightBlueBundle::class)
            register(ItemID.LIGHT_BLUE_DYE, ItemLightBlueDye::class)
            register(ItemID.LIGHT_GRAY_BUNDLE, ItemLightGrayBundle::class)
            register(ItemID.LIGHT_GRAY_DYE, ItemLightGrayDye::class)
            register(ItemID.LIME_BUNDLE, ItemLimeBundle::class)
            register(ItemID.LIME_DYE, ItemLimeDye::class)
            register(ItemID.LINGERING_POTION, ItemLingeringPotion::class)
            register(ItemID.LLAMA_SPAWN_EGG, ItemLlamaSpawnEgg::class)
            register(ItemID.LODESTONE_COMPASS, ItemLodestoneCompass::class)
            register(ItemID.LOG, ItemLog::class)
            register(ItemID.LOG2, ItemLog2::class)
            register(ItemID.MACE, ItemMace::class)
            register(ItemID.MAGENTA_BUNDLE, ItemMagentaBundle::class)
            register(ItemID.MAGENTA_DYE, ItemMagentaDye::class)
            register(ItemID.MAGMA_CREAM, ItemMagmaCream::class)
            register(ItemID.MAGMA_CUBE_SPAWN_EGG, ItemMagmaCubeSpawnEgg::class)
            register(ItemID.MANGROVE_BOAT, ItemMangroveBoat::class)
            register(ItemID.MANGROVE_CHEST_BOAT, ItemMangroveChestBoat::class)
            register(ItemID.MANGROVE_SIGN, ItemMangroveSign::class)
            register(ItemID.MEDICINE, ItemMedicine::class)
            register(ItemID.MELON_SEEDS, ItemMelonSeeds::class)
            register(ItemID.MELON_SLICE, ItemMelonSlice::class)
            register(ItemID.MILK_BUCKET, ItemMilkBucket::class)
            register(ItemID.MINECART, ItemMinecart::class)
            register(ItemID.MINER_POTTERY_SHERD, ItemMinerPotterySherd::class)
            register(ItemID.MOJANG_BANNER_PATTERN, ItemMojangBannerPattern::class)
            register(ItemID.MOOSHROOM_SPAWN_EGG, ItemMooshroomSpawnEgg::class)
            register(ItemID.MOURNER_POTTERY_SHERD, ItemMournerPotterySherd::class)
            register(ItemID.MULE_SPAWN_EGG, ItemMuleSpawnEgg::class)
            register(ItemID.MUSHROOM_STEW, ItemMushroomStew::class)
            register(ItemID.MUSIC_DISC_11, ItemMusicDisc11::class)
            register(ItemID.MUSIC_DISC_13, ItemMusicDisc13::class)
            register(ItemID.MUSIC_DISC_5, ItemMusicDisc5::class)
            register(ItemID.MUSIC_DISC_BLOCKS, ItemMusicDiscBlocks::class)
            register(ItemID.MUSIC_DISC_CAT, ItemMusicDiscCat::class)
            register(ItemID.MUSIC_DISC_CHIRP, ItemMusicDiscChirp::class)
            register(ItemID.MUSIC_DISC_CREATOR, ItemMusicDiscCreator::class)
            register(ItemID.MUSIC_DISC_CREATOR_MUSIC_BOX, ItemMusicDiscCreatorMusicBox::class)
            register(ItemID.MUSIC_DISC_FAR, ItemMusicDiscFar::class)
            register(ItemID.MUSIC_DISC_MALL, ItemMusicDiscMall::class)
            register(ItemID.MUSIC_DISC_MELLOHI, ItemMusicDiscMellohi::class)
            register(ItemID.MUSIC_DISC_OTHERSIDE, ItemMusicDiscOtherside::class)
            register(ItemID.MUSIC_DISC_PIGSTEP, ItemMusicDiscPigstep::class)
            register(ItemID.MUSIC_DISC_PRECIPICE, ItemMusicDiscPrecipice::class)
            register(ItemID.MUSIC_DISC_RELIC, ItemMusicDiscRelic::class)
            register(ItemID.MUSIC_DISC_STAL, ItemMusicDiscStal::class)
            register(ItemID.MUSIC_DISC_STRAD, ItemMusicDiscStrad::class)
            register(ItemID.MUSIC_DISC_WAIT, ItemMusicDiscWait::class)
            register(ItemID.MUSIC_DISC_WARD, ItemMusicDiscWard::class)
            register(ItemID.MUTTON, ItemMutton::class)
            register(ItemID.NAME_TAG, ItemNameTag::class)
            register(ItemID.NAUTILUS_SHELL, ItemNautilusShell::class)
            register(ItemID.NETHER_STAR, ItemNetherStar::class)
            register(ItemID.NETHERBRICK, ItemNetherbrick::class)
            register(ItemID.NETHERITE_AXE, ItemNetheriteAxe::class)
            register(ItemID.NETHERITE_BOOTS, ItemNetheriteBoots::class)
            register(ItemID.NETHERITE_CHESTPLATE, ItemNetheriteChestplate::class)
            register(ItemID.NETHERITE_HELMET, ItemNetheriteHelmet::class)
            register(ItemID.NETHERITE_HOE, ItemNetheriteHoe::class)
            register(ItemID.NETHERITE_INGOT, ItemNetheriteIngot::class)
            register(ItemID.NETHERITE_LEGGINGS, ItemNetheriteLeggings::class)
            register(ItemID.NETHERITE_PICKAXE, ItemNetheritePickaxe::class)
            register(ItemID.NETHERITE_SCRAP, ItemNetheriteScrap::class)
            register(ItemID.NETHERITE_SHOVEL, ItemNetheriteShovel::class)
            register(ItemID.NETHERITE_SWORD, ItemNetheriteSword::class)
            register(ItemID.NETHERITE_UPGRADE_SMITHING_TEMPLATE, ItemNetheriteUpgradeSmithingTemplate::class)
            register(ItemID.NPC_SPAWN_EGG, ItemNpcSpawnEgg::class)
            register(ItemID.OAK_BOAT, ItemOakBoat::class)
            register(ItemID.OAK_CHEST_BOAT, ItemOakChestBoat::class)
            register(ItemID.OAK_SIGN, ItemOakSign::class)
            register(ItemID.OCELOT_SPAWN_EGG, ItemOcelotSpawnEgg::class)
            register(ItemID.OMINOUS_BOTTLE, ItemOminousBottle::class)
            register(ItemID.OMINOUS_TRIAL_KEY, ItemOminousTrialKey::class)
            register(ItemID.ORANGE_BUNDLE, ItemOrangeBundle::class)
            register(ItemID.ORANGE_DYE, ItemOrangeDye::class)
            register(ItemID.PAINTING, ItemPainting::class)
            register(ItemID.PALE_OAK_BOAT, ItemPaleOakBoat::class)
            register(ItemID.PALE_OAK_CHEST_BOAT, ItemPaleOakChestBoat::class)
            register(ItemID.PALE_OAK_HANGING_SIGN, ItemPaleOakHangingSign::class)
            register(ItemID.PALE_OAK_SIGN, ItemPaleOakSign::class)
            register(ItemID.PANDA_SPAWN_EGG, ItemPandaSpawnEgg::class)
            register(ItemID.PAPER, ItemPaper::class)
            register(ItemID.PARROT_SPAWN_EGG, ItemParrotSpawnEgg::class)
            register(ItemID.PHANTOM_MEMBRANE, ItemPhantomMembrane::class)
            register(ItemID.PHANTOM_SPAWN_EGG, ItemPhantomSpawnEgg::class)
            register(ItemID.PIG_SPAWN_EGG, ItemPigSpawnEgg::class)
            register(ItemID.PIGLIN_BANNER_PATTERN, ItemPiglinBannerPattern::class)
            register(ItemID.PIGLIN_BRUTE_SPAWN_EGG, ItemPiglinBruteSpawnEgg::class)
            register(ItemID.PIGLIN_HEAD, ItemPiglinHead::class)
            register(ItemID.PIGLIN_SPAWN_EGG, ItemPiglinSpawnEgg::class)
            register(ItemID.PILLAGER_SPAWN_EGG, ItemPillagerSpawnEgg::class)
            register(ItemID.PINK_BUNDLE, ItemPinkBundle::class)
            register(ItemID.PINK_DYE, ItemPinkDye::class)
            register(ItemID.PITCHER_POD, ItemPitcherPod::class)
            register(ItemID.PLANKS, ItemPlanks::class)
            register(ItemID.PLAYER_HEAD, ItemPlayerHead::class)
            register(ItemID.PLENTY_POTTERY_SHERD, ItemPlentyPotterySherd::class)
            register(ItemID.POISONOUS_POTATO, ItemPoisonousPotato::class)
            register(ItemID.POLAR_BEAR_SPAWN_EGG, ItemPolarBearSpawnEgg::class)
            register(ItemID.POPPED_CHORUS_FRUIT, ItemPoppedChorusFruit::class)
            register(ItemID.PORKCHOP, ItemPorkchop::class)
            register(ItemID.POTATO, ItemPotato::class)
            register(ItemID.POTION, ItemPotion::class)
            register(ItemID.POWDER_SNOW_BUCKET, ItemPowderSnowBucket::class)
            register(ItemID.PRISMARINE, ItemPrismarine::class)
            register(ItemID.PRISMARINE_CRYSTALS, ItemPrismarineCrystals::class)
            register(ItemID.PRISMARINE_SHARD, ItemPrismarineShard::class)
            register(ItemID.PRIZE_POTTERY_SHERD, ItemPrizePotterySherd::class)
            register(ItemID.PUFFERFISH, ItemPufferfish::class)
            register(ItemID.PUFFERFISH_BUCKET, ItemPufferfishBucket::class)
            register(ItemID.PUFFERFISH_SPAWN_EGG, ItemPufferfishSpawnEgg::class)
            register(ItemID.PUMPKIN_PIE, ItemPumpkinPie::class)
            register(ItemID.PUMPKIN_SEEDS, ItemPumpkinSeeds::class)
            register(ItemID.PURPLE_BUNDLE, ItemPurpleBundle::class)
            register(ItemID.PURPLE_DYE, ItemPurpleDye::class)
            register(ItemID.PURPUR_BLOCK, ItemPurpurBlock::class)
            register(ItemID.QUARTZ, ItemQuartz::class)
            register(ItemID.QUARTZ_BLOCK, ItemQuartzBlock::class)
            register(ItemID.RABBIT, ItemRabbit::class)
            register(ItemID.RABBIT_FOOT, ItemRabbitFoot::class)
            register(ItemID.RABBIT_HIDE, ItemRabbitHide::class)
            register(ItemID.RABBIT_SPAWN_EGG, ItemRabbitSpawnEgg::class)
            register(ItemID.RABBIT_STEW, ItemRabbitStew::class)
            register(ItemID.RAISER_ARMOR_TRIM_SMITHING_TEMPLATE, ItemRaiserArmorTrimSmithingTemplate::class)
            register(ItemID.RAPID_FERTILIZER, ItemRapidFertilizer::class)
            register(ItemID.RAVAGER_SPAWN_EGG, ItemRavagerSpawnEgg::class)
            register(ItemID.RAW_COPPER, ItemRawCopper::class)
            register(ItemID.RAW_GOLD, ItemRawGold::class)
            register(ItemID.RAW_IRON, ItemRawIron::class)
            register(ItemID.RECOVERY_COMPASS, ItemRecoveryCompass::class)
            register(ItemID.RED_BUNDLE, ItemRedBundle::class)
            register(ItemID.RED_DYE, ItemRedDye::class)
            register(ItemID.RED_FLOWER, ItemRedFlower::class)
            register(ItemID.RED_SANDSTONE, ItemRedSandstone::class)
            register(ItemID.REDSTONE, ItemRedstone::class)
            register(ItemID.REPEATER, ItemRepeater::class)
            register(ItemID.RESIN_BRICK, ItemResinBrick::class)
            register(ItemID.RIB_ARMOR_TRIM_SMITHING_TEMPLATE, ItemRibArmorTrimSmithingTemplate::class)
            register(ItemID.ROTTEN_FLESH, ItemRottenFlesh::class)
            register(ItemID.SADDLE, ItemSaddle::class)
            register(ItemID.SALMON, ItemSalmon::class)
            register(ItemID.SALMON_BUCKET, ItemSalmonBucket::class)
            register(ItemID.SALMON_SPAWN_EGG, ItemSalmonSpawnEgg::class)
            register(ItemID.SAND, ItemSand::class)
            register(ItemID.SANDSTONE, ItemSandstone::class)
            register(ItemID.SAPLING, ItemSapling::class)
            register(ItemID.SCRAPE_POTTERY_SHERD, ItemScrapePotterySherd::class)
            register(ItemID.SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE, ItemSentryArmorTrimSmithingTemplate::class)
            register(ItemID.SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE, ItemShaperArmorTrimSmithingTemplate::class)
            register(ItemID.SHEAF_POTTERY_SHERD, ItemSheafPotterySherd::class)
            register(ItemID.SHEARS, ItemShears::class)
            register(ItemID.SHEEP_SPAWN_EGG, ItemSheepSpawnEgg::class)
            register(ItemID.SHELTER_POTTERY_SHERD, ItemShelterPotterySherd::class)
            register(ItemID.SHIELD, ItemShield::class)
            register(ItemID.SHULKER_BOX, ItemShulkerBox::class)
            register(ItemID.SHULKER_SHELL, ItemShulkerShell::class)
            register(ItemID.SHULKER_SPAWN_EGG, ItemShulkerSpawnEgg::class)
            register(ItemID.SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE, ItemSilenceArmorTrimSmithingTemplate::class)
            register(ItemID.SILVERFISH_SPAWN_EGG, ItemSilverfishSpawnEgg::class)
            register(ItemID.SKELETON_HORSE_SPAWN_EGG, ItemSkeletonHorseSpawnEgg::class)
            register(ItemID.SKELETON_SKULL, ItemSkeletonSkull::class)
            register(ItemID.SKELETON_SPAWN_EGG, ItemSkeletonSpawnEgg::class)
            register(ItemID.SKULL_BANNER_PATTERN, ItemSkullBannerPattern::class)
            register(ItemID.SKULL_POTTERY_SHERD, ItemSkullPotterySherd::class)
            register(ItemID.SLIME_BALL, ItemSlimeBall::class)
            register(ItemID.SLIME_SPAWN_EGG, ItemSlimeSpawnEgg::class)
            register(ItemID.SNIFFER_SPAWN_EGG, ItemSnifferSpawnEgg::class)
            register(ItemID.SNORT_POTTERY_SHERD, ItemSnortPotterySherd::class)
            register(ItemID.SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE, ItemSnoutArmorTrimSmithingTemplate::class)
            register(ItemID.SNOW_GOLEM_SPAWN_EGG, ItemSnowGolemSpawnEgg::class)
            register(ItemID.SNOWBALL, ItemSnowball::class)
            register(ItemID.SPARKLER, ItemSparkler::class)
            register(ItemID.SPAWN_EGG, ItemSpawnEgg::class)
            register(ItemID.SPIDER_EYE, ItemSpiderEye::class)
            register(ItemID.SPIDER_SPAWN_EGG, ItemSpiderSpawnEgg::class)
            register(ItemID.SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE, ItemSpireArmorTrimSmithingTemplate::class)
            register(ItemID.SPLASH_POTION, ItemSplashPotion::class)
            register(ItemID.SPONGE, ItemSponge::class)
            register(ItemID.SPRUCE_BOAT, ItemSpruceBoat::class)
            register(ItemID.SPRUCE_CHEST_BOAT, ItemSpruceChestBoat::class)
            register(ItemID.SPRUCE_SIGN, ItemSpruceSign::class)
            register(ItemID.SPYGLASS, ItemSpyglass::class)
            register(ItemID.SQUID_SPAWN_EGG, ItemSquidSpawnEgg::class)
            register(ItemID.STAINED_GLASS, ItemStainedGlass::class)
            register(ItemID.STAINED_GLASS_PANE, ItemStainedGlassPane::class)
            register(ItemID.STAINED_HARDENED_CLAY, ItemStainedHardenedClay::class)
            register(ItemID.STICK, ItemStick::class)
            register(ItemID.STONE_AXE, ItemStoneAxe::class)
            register(ItemID.STONE_BLOCK_SLAB, ItemStoneBlockSlab::class)
            register(ItemID.STONE_HOE, ItemStoneHoe::class)
            register(ItemID.STONE_PICKAXE, ItemStonePickaxe::class)
            register(ItemID.STONE_SHOVEL, ItemStoneShovel::class)
            register(ItemID.STONE_SWORD, ItemStoneSword::class)
            register(ItemID.STRAY_SPAWN_EGG, ItemStraySpawnEgg::class)
            register(ItemID.STRIDER_SPAWN_EGG, ItemStriderSpawnEgg::class)
            register(ItemID.STRING, ItemString::class)
            register(ItemID.SUGAR, ItemSugar::class)
            register(ItemID.SUGAR_CANE, ItemSugarCane::class)
            register(ItemID.SUSPICIOUS_STEW, ItemSuspiciousStew::class)
            register(ItemID.SWEET_BERRIES, ItemSweetBerries::class)
            register(ItemID.TADPOLE_BUCKET, ItemTadpoleBucket::class)
            register(ItemID.TADPOLE_SPAWN_EGG, ItemTadpoleSpawnEgg::class)
            register(ItemID.TALLGRASS, ItemTallgrass::class)
            register(ItemID.TIDE_ARMOR_TRIM_SMITHING_TEMPLATE, ItemTideArmorTrimSmithingTemplate::class)
            register(ItemID.TNT_MINECART, ItemTntMinecart::class)
            register(ItemID.TORCHFLOWER_SEEDS, ItemTorchflowerSeeds::class)
            register(ItemID.TOTEM_OF_UNDYING, ItemTotemOfUndying::class)
            register(ItemID.TRADER_LLAMA_SPAWN_EGG, ItemTraderLlamaSpawnEgg::class)
            register(ItemID.TRIAL_KEY, ItemTrialKey::class)
            register(ItemID.TRIDENT, ItemTrident::class)
            register(ItemID.TROPICAL_FISH, ItemTropicalFish::class)
            register(ItemID.TROPICAL_FISH_BUCKET, ItemTropicalFishBucket::class)
            register(ItemID.TROPICAL_FISH_SPAWN_EGG, ItemTropicalFishSpawnEgg::class)
            register(ItemID.TURTLE_HELMET, ItemTurtleHelmet::class)
            register(ItemID.TURTLE_SCUTE, ItemTurtleScute::class)
            register(ItemID.TURTLE_SPAWN_EGG, ItemTurtleSpawnEgg::class)
            register(ItemID.VEX_ARMOR_TRIM_SMITHING_TEMPLATE, ItemVexArmorTrimSmithingTemplate::class)
            register(ItemID.VEX_SPAWN_EGG, ItemVexSpawnEgg::class)
            register(ItemID.VILLAGER_SPAWN_EGG, ItemVillagerSpawnEgg::class)
            register(ItemID.VINDICATOR_SPAWN_EGG, ItemVindicatorSpawnEgg::class)
            register(ItemID.WANDERING_TRADER_SPAWN_EGG, ItemWanderingTraderSpawnEgg::class)
            register(ItemID.WARD_ARMOR_TRIM_SMITHING_TEMPLATE, ItemWardArmorTrimSmithingTemplate::class)
            register(ItemID.WARDEN_SPAWN_EGG, ItemWardenSpawnEgg::class)
            register(ItemID.WARPED_FUNGUS_ON_A_STICK, ItemWarpedFungusOnAStick::class)
            register(ItemID.WARPED_SIGN, ItemWarpedSign::class)
            register(ItemID.WATER_BUCKET, ItemWaterBucket::class)
            register(ItemID.WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE, ItemWayfinderArmorTrimSmithingTemplate::class)
            register(ItemID.WHEAT_SEEDS, ItemWheatSeeds::class)
            register(ItemID.WHITE_BUNDLE, ItemWhiteBundle::class)
            register(ItemID.WHITE_DYE, ItemWhiteDye::class)
            register(ItemID.WILD_ARMOR_TRIM_SMITHING_TEMPLATE, ItemWildArmorTrimSmithingTemplate::class)
            register(ItemID.WIND_CHARGE, ItemWindCharge::class)
            register(ItemID.WITCH_SPAWN_EGG, ItemWitchSpawnEgg::class)
            register(ItemID.WITHER_SKELETON_SKULL, ItemWitherSkeletonSkull::class)
            register(ItemID.WITHER_SKELETON_SPAWN_EGG, ItemWitherSkeletonSpawnEgg::class)
            register(ItemID.WITHER_SPAWN_EGG, ItemWitherSpawnEgg::class)
            register(ItemID.WOLF_ARMOR, ItemWolfArmor::class)
            register(ItemID.WOLF_SPAWN_EGG, ItemWolfSpawnEgg::class)
            register(ItemID.WOOD, ItemWood::class)
            register(ItemID.WOODEN_AXE, ItemWoodenAxe::class)
            register(ItemID.WOODEN_HOE, ItemWoodenHoe::class)
            register(ItemID.WOODEN_PICKAXE, ItemWoodenPickaxe::class)
            register(ItemID.WOODEN_SHOVEL, ItemWoodenShovel::class)
            register(ItemID.WOODEN_SLAB, ItemWoodenSlab::class)
            register(ItemID.WOODEN_SWORD, ItemWoodenSword::class)
            register(ItemID.WOOL, ItemWool::class)
            register(ItemID.WRITABLE_BOOK, ItemWritableBook::class)
            register(ItemID.WRITTEN_BOOK, ItemWrittenBook::class)
            register(ItemID.YELLOW_BUNDLE, ItemYellowBundle::class)
            register(ItemID.YELLOW_DYE, ItemYellowDye::class)
            register(ItemID.ZOGLIN_SPAWN_EGG, ItemZoglinSpawnEgg::class)
            register(ItemID.ZOMBIE_HEAD, ItemZombieHead::class)
            register(ItemID.ZOMBIE_HORSE_SPAWN_EGG, ItemZombieHorseSpawnEgg::class)
            register(ItemID.ZOMBIE_PIGMAN_SPAWN_EGG, ItemZombiePigmanSpawnEgg::class)
            register(ItemID.ZOMBIE_SPAWN_EGG, ItemZombieSpawnEgg::class)
            register(ItemID.ZOMBIE_VILLAGER_SPAWN_EGG, ItemZombieVillagerSpawnEgg::class)
            register(ItemID.MUSIC_DISC_TEARS, ItemMusicDiscTears::class)
            register(ItemID.HAPPY_GHAST_SPAWN_EGG, ItemHappyGhastSpawnEgg::class)
            register(ItemID.HARNESS_BLACK, ItemHarnessBlack::class)
            register(ItemID.HARNESS_BLUE, ItemHarnessBlue::class)
            register(ItemID.HARNESS_BROWN, ItemHarnessBrown::class)
            register(ItemID.HARNESS_CYAN, ItemHarnessCyan::class)
            register(ItemID.HARNESS_GRAY, ItemHarnessGray::class)
            register(ItemID.HARNESS_GREEN, ItemHarnessGreen::class)
            register(ItemID.HARNESS_LIGHT_BLUE, ItemHarnessLightBlue::class)
            register(ItemID.HARNESS_LIGHT_GRAY, ItemHarnessLightGray::class)
            register(ItemID.HARNESS_LIME, ItemHarnessLime::class)
            register(ItemID.HARNESS_MAGENTA, ItemHarnessMagenta::class)
            register(ItemID.HARNESS_ORANGE, ItemHarnessOrange::class)
            register(ItemID.HARNESS_PINK, ItemHarnessPink::class)
            register(ItemID.HARNESS_PURPLE, ItemHarnessPurple::class)
            register(ItemID.HARNESS_RED, ItemHarnessRed::class)
            register(ItemID.HARNESS_WHITE, ItemHarnessWhite::class)
            register(ItemID.HARNESS_YELLOW, ItemHarnessYellow::class)
            registerBlockItem()
        } catch (e: RegisterException) {
            throw RuntimeException(e)
        }
        loadItemComponents()
    }

    private fun loadItemComponents() {
        try {
            ItemRegistry::class.java.classLoader.getResourceAsStream("item_components.nbt").use { stream ->
                if (stream == null) {
                    throw RuntimeException("Couldn't load item_components.nbt")
                }
                itemComponents = readCompressed(stream)
            }
        } catch (e: IOException) {
            throw RuntimeException(e)
        }
    }

    @Throws(RegisterException::class)
    private fun registerBlockItem() {
        register(BlockID.BED, ItemBed::class)
        register(BlockID.BIRCH_HANGING_SIGN, ItemBirchHangingSign::class)
        register(BlockID.ACACIA_HANGING_SIGN, ItemAcaciaHangingSign::class)
        register(BlockID.BAMBOO_HANGING_SIGN, ItemBambooHangingSign::class)
        register(BlockID.CHERRY_HANGING_SIGN, ItemCherryHangingSign::class)
        register(BlockID.CRIMSON_HANGING_SIGN, ItemCrimsonHangingSign::class)
        register(BlockID.DARK_OAK_HANGING_SIGN, ItemDarkOakHangingSign::class)
        register(BlockID.JUNGLE_HANGING_SIGN, ItemJungleHangingSign::class)
        register(BlockID.MANGROVE_HANGING_SIGN, ItemMangroveHangingSign::class)
        register(BlockID.OAK_HANGING_SIGN, ItemOakHangingSign::class)
        register(BlockID.SPRUCE_HANGING_SIGN, ItemSpruceHangingSign::class)
        register(BlockID.WARPED_HANGING_SIGN, ItemWarpedHangingSign::class)
        register(BlockID.BEETROOT, ItemBeetroot::class)
    }

    override fun get(key: String): Item? {
        try {
            val clazz = CACHE_CLASSES[key] ?: return null
            return clazz.createInstance()
        } catch (e: Throwable) {
            throw RuntimeException(e)
        }
    }

    fun get(id: String?, meta: Int): Item? {
        try {
            val clazz = CACHE_CLASSES[id] ?: return null
            val item = clazz.createInstance()
            item.damage = meta
            return item
        } catch (e: Throwable) {
            throw RuntimeException(e)
        }
    }

    fun get(id: String?, meta: Int, count: Int): Item? {
        try {
            val clazz = CACHE_CLASSES[id] ?: return null
            val item = clazz.createInstance()
            item.setCount(count)
            item.damage = meta
            return item
        } catch (e: Throwable) {
            throw RuntimeException(e)
        }
    }

    fun get(id: String?, meta: Int, count: Int, tags: CompoundTag?): Item? {
        try {
            val clazz = CACHE_CLASSES[id] ?: return null
            val item = clazz.createInstance()
            item.setCount(count)
            item.setCompoundTag(tags)
            item.damage = meta
            return item
        } catch (e: Throwable) {
            throw RuntimeException(e)
        }
    }

    operator fun get(id: String?, meta: Int, count: Int, tags: ByteArray?): Item? {
        try {
            val clazz = CACHE_CLASSES[id] ?: return null
            val item = clazz.createInstance()
            item.setCount(count)
            if (tags != null) {
                item.setCompoundTag(tags)
            }
            item.damage = meta
            return item
        } catch (_: Throwable) {
            return null
        }
    }

    val all: MutableSet<String>
        get() {
            val ids = CACHE_CLASSES.keys
            ids.addAll(CUSTOM_ITEM_DEFINITIONS.keys)
            return ids
        }

    override fun reload() {
        isLoad.set(false)
        CACHE_CLASSES.clear()
        CUSTOM_ITEM_DEFINITIONS.clear()
        init()
    }

    @Throws(RegisterException::class)
    override fun register(key: String, value: KClass<out Item>) {
        try {
            if (CACHE_CLASSES.putIfAbsent(key, value) != null) {
                throw RegisterException("This item has already been registered with the identifier: $key")
            }
        } catch (e: NoSuchMethodException) {
            throw RegisterException(e)
        } catch (e: Throwable) {
            throw RuntimeException(e)
        }
    }

    /**
     * register custom item
     */
    @SafeVarargs
    @Throws(RegisterException::class)
    fun registerCustomItem(plugin: Plugin, vararg values: KClass<out Item>) {
        for (c in values) {
            registerCustomItem(plugin, c)
        }
    }


    @Throws(RegisterException::class)
    fun registerCustomItem(plugin: Plugin, value: KClass<out Item>) {
        try {
            if (value.isSubclassOf(CustomItem::class)) {
                val customItem = value.createInstance() as CustomItem
                val key = customItem.definition.identifier
                if (CACHE_CLASSES.putIfAbsent(key, value) == null) {
                    CUSTOM_ITEM_DEFINITIONS[key] = customItem.definition
                    Registries.ITEM_RUNTIMEID.registerCustomRuntimeItem(
                        RuntimeEntry(
                            key,
                            customItem.definition.runtimeId,
                            true
                        )
                    )
                    val ci = customItem as Item
                    ci.netId = (null)
                    Registries.CREATIVE.addCreativeItem(ci)
                } else {
                    throw RegisterException("This item has already been registered with the identifier: $key")
                }
            } else {
                throw RegisterException("This class does not implement the CustomItem interface and cannot be registered as a custom item!")
            }
        } catch (e: NoSuchMethodException) {
            throw RegisterException(e)
        } catch (e: Throwable) {
            throw RuntimeException(e)
        }
    }

    companion object {
        private val CACHE_CLASSES = HashMap<String, KClass<out Item>>()
        private val CUSTOM_ITEM_DEFINITIONS: MutableMap<String, CustomItemDefinition> = HashMap()
        private val isLoad = AtomicBoolean(false)

        var itemComponents = CompoundTag()
            private set
    }
}

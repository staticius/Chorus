package org.chorus_oss.chorus.network.protocol

import org.chorus_oss.chorus.network.connection.util.HandleByteBuf
import org.chorus_oss.chorus.network.protocol.types.ActorUniqueID
import org.chorus_oss.chorus.utils.Utils

open class LevelSoundEventPacket : DataPacket() {
    var sound: Int = 0
    var x: Float = 0f
    var y: Float = 0f
    var z: Float = 0f
    var extraData: Int = -1
    var entityIdentifier: String = ""
    var isBabyMob: Boolean = false
    var isGlobal: Boolean = false
    var entityUniqueID: ActorUniqueID = -1

    override fun encode(byteBuf: HandleByteBuf) {
        byteBuf.writeVarInt(this.sound)
        byteBuf.writeVector3f(this.x, this.y, this.z)
        byteBuf.writeVarInt(this.extraData)
        byteBuf.writeString(this.entityIdentifier)
        byteBuf.writeBoolean(this.isBabyMob)
        byteBuf.writeBoolean(this.isGlobal)
        byteBuf.writeLongLE(this.entityUniqueID)
    }

    override fun pid(): Int {
        return ProtocolInfo.Companion.LEVEL_SOUND_EVENT_PACKET
    }

    override fun handle(handler: PacketHandler) {
        handler.handle(this)
    }

    companion object : PacketDecoder<LevelSoundEventPacket> {
        override fun decode(byteBuf: HandleByteBuf): LevelSoundEventPacket {
            val packet = LevelSoundEventPacket()

            packet.sound = byteBuf.readVarInt()
            val v = byteBuf.readVector3f()
            packet.x = v.x
            packet.y = v.y
            packet.z = v.z
            packet.extraData = byteBuf.readVarInt()
            packet.entityIdentifier = byteBuf.readString()
            packet.isBabyMob = byteBuf.readBoolean()
            packet.isGlobal = byteBuf.readBoolean()
            packet.entityUniqueID = byteBuf.readLongLE()

            return packet
        }

        // TODO: Turn into enum...

        val SOUND_ITEM_USE_ON: Int = Utils.dynamic(0)
        val SOUND_HIT: Int = Utils.dynamic(1)
        val SOUND_STEP: Int = Utils.dynamic(2)
        val SOUND_FLY: Int = Utils.dynamic(3)
        val SOUND_JUMP: Int = Utils.dynamic(4)
        val SOUND_BREAK: Int = Utils.dynamic(5)

        @JvmField
        val SOUND_PLACE: Int = Utils.dynamic(6)
        val SOUND_HEAVY_STEP: Int = Utils.dynamic(7)
        val SOUND_GALLOP: Int = Utils.dynamic(8)
        val SOUND_FALL: Int = Utils.dynamic(9)
        val SOUND_AMBIENT: Int = Utils.dynamic(10)
        val SOUND_AMBIENT_BABY: Int = Utils.dynamic(11)
        val SOUND_AMBIENT_IN_WATER: Int = Utils.dynamic(12)
        val SOUND_BREATHE: Int = Utils.dynamic(13)
        val SOUND_DEATH: Int = Utils.dynamic(14)
        val SOUND_DEATH_IN_WATER: Int = Utils.dynamic(15)
        val SOUND_DEATH_TO_ZOMBIE: Int = Utils.dynamic(16)
        val SOUND_HURT: Int = Utils.dynamic(17)
        val SOUND_HURT_IN_WATER: Int = Utils.dynamic(18)
        val SOUND_MAD: Int = Utils.dynamic(19)
        val SOUND_BOOST: Int = Utils.dynamic(20)
        val SOUND_BOW: Int = Utils.dynamic(21)
        val SOUND_SQUISH_BIG: Int = Utils.dynamic(22)
        val SOUND_SQUISH_SMALL: Int = Utils.dynamic(23)
        val SOUND_FALL_BIG: Int = Utils.dynamic(24)
        val SOUND_FALL_SMALL: Int = Utils.dynamic(25)
        val SOUND_SPLASH: Int = Utils.dynamic(26)
        val SOUND_FIZZ: Int = Utils.dynamic(27)
        val SOUND_FLAP: Int = Utils.dynamic(28)
        val SOUND_SWIM: Int = Utils.dynamic(29)
        val SOUND_DRINK: Int = Utils.dynamic(30)
        val SOUND_EAT: Int = Utils.dynamic(31)
        val SOUND_TAKEOFF: Int = Utils.dynamic(32)
        val SOUND_SHAKE: Int = Utils.dynamic(33)
        val SOUND_PLOP: Int = Utils.dynamic(34)
        val SOUND_LAND: Int = Utils.dynamic(35)
        val SOUND_SADDLE: Int = Utils.dynamic(36)
        val SOUND_ARMOR: Int = Utils.dynamic(37)
        val SOUND_MOB_ARMOR_STAND_PLACE: Int = Utils.dynamic(38)
        val SOUND_ADD_CHEST: Int = Utils.dynamic(39)
        val SOUND_THROW: Int = Utils.dynamic(40)
        val SOUND_ATTACK: Int = Utils.dynamic(41)
        val SOUND_ATTACK_NODAMAGE: Int = Utils.dynamic(42)
        val SOUND_ATTACK_STRONG: Int = Utils.dynamic(43)
        val SOUND_WARN: Int = Utils.dynamic(44)
        val SOUND_SHEAR: Int = Utils.dynamic(45)
        val SOUND_MILK: Int = Utils.dynamic(46)
        val SOUND_THUNDER: Int = Utils.dynamic(47)
        val SOUND_EXPLODE: Int = Utils.dynamic(48)
        val SOUND_FIRE: Int = Utils.dynamic(49)
        val SOUND_IGNITE: Int = Utils.dynamic(50)
        val SOUND_FUSE: Int = Utils.dynamic(51)
        val SOUND_STARE: Int = Utils.dynamic(52)
        val SOUND_SPAWN: Int = Utils.dynamic(53)
        val SOUND_SHOOT: Int = Utils.dynamic(54)
        val SOUND_BREAK_BLOCK: Int = Utils.dynamic(55)
        val SOUND_LAUNCH: Int = Utils.dynamic(56)
        val SOUND_BLAST: Int = Utils.dynamic(57)
        val SOUND_LARGE_BLAST: Int = Utils.dynamic(58)
        val SOUND_TWINKLE: Int = Utils.dynamic(59)
        val SOUND_REMEDY: Int = Utils.dynamic(60)
        val SOUND_UNFECT: Int = Utils.dynamic(61)

        @JvmField
        val SOUND_LEVELUP: Int = Utils.dynamic(62)
        val SOUND_BOW_HIT: Int = Utils.dynamic(63)
        val SOUND_BULLET_HIT: Int = Utils.dynamic(64)

        @JvmField
        val SOUND_EXTINGUISH_FIRE: Int = Utils.dynamic(65)
        val SOUND_ITEM_FIZZ: Int = Utils.dynamic(66)
        val SOUND_CHEST_OPEN: Int = Utils.dynamic(67)
        val SOUND_CHEST_CLOSED: Int = Utils.dynamic(68)
        val SOUND_SHULKERBOX_OPEN: Int = Utils.dynamic(69)
        val SOUND_SHULKERBOX_CLOSED: Int = Utils.dynamic(70)
        val SOUND_ENDERCHEST_OPEN: Int = Utils.dynamic(71)
        val SOUND_ENDERCHEST_CLOSED: Int = Utils.dynamic(72)

        @JvmField
        val SOUND_POWER_ON: Int = Utils.dynamic(73)

        @JvmField
        val SOUND_POWER_OFF: Int = Utils.dynamic(74)

        @JvmField
        val SOUND_ATTACH: Int = Utils.dynamic(75)

        @JvmField
        val SOUND_DETACH: Int = Utils.dynamic(76)
        val SOUND_DENY: Int = Utils.dynamic(77)
        val SOUND_TRIPOD: Int = Utils.dynamic(78)
        val SOUND_POP: Int = Utils.dynamic(79)
        val SOUND_DROP_SLOT: Int = Utils.dynamic(80)

        @JvmField
        val SOUND_NOTE: Int = Utils.dynamic(81)
        val SOUND_THORNS: Int = Utils.dynamic(82)
        val SOUND_PISTON_IN: Int = Utils.dynamic(83)
        val SOUND_PISTON_OUT: Int = Utils.dynamic(84)
        val SOUND_PORTAL: Int = Utils.dynamic(85)
        val SOUND_WATER: Int = Utils.dynamic(86)
        val SOUND_LAVA_POP: Int = Utils.dynamic(87)
        val SOUND_LAVA: Int = Utils.dynamic(88)

        @JvmField
        val SOUND_BURP: Int = Utils.dynamic(89)
        val SOUND_BUCKET_FILL_WATER: Int = Utils.dynamic(90)
        val SOUND_BUCKET_FILL_LAVA: Int = Utils.dynamic(91)
        val SOUND_BUCKET_EMPTY_WATER: Int = Utils.dynamic(92)
        val SOUND_BUCKET_EMPTY_LAVA: Int = Utils.dynamic(93)
        val SOUND_ARMOR_EQUIP_CHAIN: Int = Utils.dynamic(94)
        val SOUND_ARMOR_EQUIP_DIAMOND: Int = Utils.dynamic(95)
        val SOUND_ARMOR_EQUIP_GENERIC: Int = Utils.dynamic(96)
        val SOUND_ARMOR_EQUIP_GOLD: Int = Utils.dynamic(97)
        val SOUND_ARMOR_EQUIP_IRON: Int = Utils.dynamic(98)
        val SOUND_ARMOR_EQUIP_LEATHER: Int = Utils.dynamic(99)
        val SOUND_ARMOR_EQUIP_ELYTRA: Int = Utils.dynamic(100)
        val SOUND_RECORD_13: Int = Utils.dynamic(101)
        val SOUND_RECORD_CAT: Int = Utils.dynamic(102)
        val SOUND_RECORD_BLOCKS: Int = Utils.dynamic(103)
        val SOUND_RECORD_CHIRP: Int = Utils.dynamic(104)
        val SOUND_RECORD_FAR: Int = Utils.dynamic(105)
        val SOUND_RECORD_MALL: Int = Utils.dynamic(106)
        val SOUND_RECORD_MELLOHI: Int = Utils.dynamic(107)
        val SOUND_RECORD_STAL: Int = Utils.dynamic(108)
        val SOUND_RECORD_STRAD: Int = Utils.dynamic(109)
        val SOUND_RECORD_WARD: Int = Utils.dynamic(110)
        val SOUND_RECORD_11: Int = Utils.dynamic(111)
        val SOUND_RECORD_WAIT: Int = Utils.dynamic(112)
        val SOUND_STOP_RECORD: Int = Utils.dynamic(113)
        val SOUND_FLOP: Int = Utils.dynamic(114)
        val SOUND_ELDERGUARDIAN_CURSE: Int = Utils.dynamic(115)
        val SOUND_MOB_WARNING: Int = Utils.dynamic(116)
        val SOUND_MOB_WARNING_BABY: Int = Utils.dynamic(117)
        val SOUND_TELEPORT: Int = Utils.dynamic(118)
        val SOUND_SHULKER_OPEN: Int = Utils.dynamic(119)
        val SOUND_SHULKER_CLOSE: Int = Utils.dynamic(120)
        val SOUND_HAGGLE: Int = Utils.dynamic(121)
        val SOUND_HAGGLE_YES: Int = Utils.dynamic(122)
        val SOUND_HAGGLE_NO: Int = Utils.dynamic(123)
        val SOUND_HAGGLE_IDLE: Int = Utils.dynamic(124)
        val SOUND_CHORUS_GROW: Int = Utils.dynamic(125)
        val SOUND_CHORUS_DEATH: Int = Utils.dynamic(126)
        val SOUND_GLASS: Int = Utils.dynamic(127)
        val SOUND_POTION_BREWED: Int = Utils.dynamic(128)
        val SOUND_CAST_SPELL: Int = Utils.dynamic(129)
        val SOUND_PREPARE_ATTACK: Int = Utils.dynamic(130)
        val SOUND_PREPARE_SUMMON: Int = Utils.dynamic(131)
        val SOUND_PREPARE_WOLOLO: Int = Utils.dynamic(132)
        val SOUND_FANG: Int = Utils.dynamic(133)
        val SOUND_CHARGE: Int = Utils.dynamic(134)
        val SOUND_CAMERA_TAKE_PICTURE: Int = Utils.dynamic(135)
        val SOUND_LEASHKNOT_PLACE: Int = Utils.dynamic(136)
        val SOUND_LEASHKNOT_BREAK: Int = Utils.dynamic(137)
        val SOUND_GROWL: Int = Utils.dynamic(138)
        val SOUND_WHINE: Int = Utils.dynamic(139)
        val SOUND_PANT: Int = Utils.dynamic(140)
        val SOUND_PURR: Int = Utils.dynamic(141)
        val SOUND_PURREOW: Int = Utils.dynamic(142)
        val SOUND_DEATH_MIN_VOLUME: Int = Utils.dynamic(143)
        val SOUND_DEATH_MID_VOLUME: Int = Utils.dynamic(144)
        val SOUND_IMITATE_BLAZE: Int = Utils.dynamic(145)
        val SOUND_IMITATE_CAVE_SPIDER: Int = Utils.dynamic(146)
        val SOUND_IMITATE_CREEPER: Int = Utils.dynamic(147)
        val SOUND_IMITATE_ELDER_GUARDIAN: Int = Utils.dynamic(148)
        val SOUND_IMITATE_ENDER_DRAGON: Int = Utils.dynamic(149)
        val SOUND_IMITATE_ENDERMAN: Int = Utils.dynamic(150)
        val SOUND_IMITATE_ENDERMITE: Int = Utils.dynamic(151)
        val SOUND_IMITATE_EVOCATION_ILLAGER: Int = Utils.dynamic(152)
        val SOUND_IMITATE_GHAST: Int = Utils.dynamic(153)
        val SOUND_IMITATE_HUSK: Int = Utils.dynamic(154)
        val SOUND_IMITATE_ILLUSION_ILLAGER: Int = Utils.dynamic(155)
        val SOUND_IMITATE_MAGMA_CUBE: Int = Utils.dynamic(156)
        val SOUND_IMITATE_POLAR_BEAR: Int = Utils.dynamic(157)
        val SOUND_IMITATE_SHULKER: Int = Utils.dynamic(158)
        val SOUND_IMITATE_SILVERFISH: Int = Utils.dynamic(159)
        val SOUND_IMITATE_SKELETON: Int = Utils.dynamic(160)
        val SOUND_IMITATE_SLIME: Int = Utils.dynamic(161)
        val SOUND_IMITATE_SPIDER: Int = Utils.dynamic(162)
        val SOUND_IMITATE_STRAY: Int = Utils.dynamic(163)
        val SOUND_IMITATE_VEX: Int = Utils.dynamic(164)
        val SOUND_IMITATE_VINDICATION_ILLAGER: Int = Utils.dynamic(165)
        val SOUND_IMITATE_WITCH: Int = Utils.dynamic(166)
        val SOUND_IMITATE_WITHER: Int = Utils.dynamic(167)
        val SOUND_IMITATE_WITHER_SKELETON: Int = Utils.dynamic(168)
        val SOUND_IMITATE_WOLF: Int = Utils.dynamic(169)
        val SOUND_IMITATE_ZOMBIE: Int = Utils.dynamic(170)
        val SOUND_IMITATE_ZOMBIE_PIGMAN: Int = Utils.dynamic(171)
        val SOUND_IMITATE_ZOMBIE_VILLAGER: Int = Utils.dynamic(172)
        val SOUND_BLOCK_END_PORTAL_FRAME_FILL: Int = Utils.dynamic(173)
        val SOUND_BLOCK_END_PORTAL_SPAWN: Int = Utils.dynamic(174)
        val SOUND_RANDOM_ANVIL_USE: Int = Utils.dynamic(175)
        val SOUND_BOTTLE_DRAGONBREATH: Int = Utils.dynamic(176)
        val SOUND_PORTAL_TRAVEL: Int = Utils.dynamic(177)
        val SOUND_ITEM_TRIDENT_HIT: Int = Utils.dynamic(178)
        val SOUND_ITEM_TRIDENT_RETURN: Int = Utils.dynamic(179)
        val SOUND_ITEM_TRIDENT_RIPTIDE_1: Int = Utils.dynamic(180)
        val SOUND_ITEM_TRIDENT_RIPTIDE_2: Int = Utils.dynamic(181)
        val SOUND_ITEM_TRIDENT_RIPTIDE_3: Int = Utils.dynamic(182)
        val SOUND_ITEM_TRIDENT_THROW: Int = Utils.dynamic(183)
        val SOUND_ITEM_TRIDENT_THUNDER: Int = Utils.dynamic(184)
        val SOUND_ITEM_TRIDENT_HIT_GROUND: Int = Utils.dynamic(185)
        val SOUND_DEFAULT: Int = Utils.dynamic(186)
        val SOUND_FLETCHING_TABLE_USE: Int = Utils.dynamic(187)
        val SOUND_ELEMENT_CONSTRUCTOR_OPEN: Int = Utils.dynamic(188)
        val SOUND_ICE_BOMB_HIT: Int = Utils.dynamic(189)
        val SOUND_BALLOON_POP: Int = Utils.dynamic(190)
        val SOUND_LT_REACTION_ICE_BOMB: Int = Utils.dynamic(191)
        val SOUND_LT_REACTION_BLEACH: Int = Utils.dynamic(192)
        val SOUND_LT_REACTION_E_PASTE: Int = Utils.dynamic(193)
        val SOUND_LT_REACTION_E_PASTE2: Int = Utils.dynamic(194)
        val SOUND_LT_REACTION_GLOW_STICK: Int = Utils.dynamic(195)
        val SOUND_LT_REACTION_GLOW_STICK2: Int = Utils.dynamic(196)
        val SOUND_LT_REACTION_LUMINOL: Int = Utils.dynamic(197)
        val SOUND_LT_REACTION_SALT: Int = Utils.dynamic(198)
        val SOUND_LT_REACTION_FERTILIZER: Int = Utils.dynamic(199)
        val SOUND_LT_REACTION_FIREBALL: Int = Utils.dynamic(200)
        val SOUND_LT_REACTION_MG_SALT: Int = Utils.dynamic(201)
        val SOUND_LT_REACTION_MISC_FIRE: Int = Utils.dynamic(202)
        val SOUND_LT_REACTION_FIRE: Int = Utils.dynamic(203)
        val SOUND_LT_REACTION_MISC_EXPLOSION: Int = Utils.dynamic(204)
        val SOUND_LT_REACTION_MISC_MYSTICAL: Int = Utils.dynamic(205)
        val SOUND_LT_REACTION_MISC_MYSTICAL2: Int = Utils.dynamic(206)
        val SOUND_LT_REACTION_PRODUCT: Int = Utils.dynamic(207)
        val SOUND_SPARKLER_USE: Int = Utils.dynamic(208)
        val SOUND_GLOWSTICK_USE: Int = Utils.dynamic(209)
        val SOUND_SPARKLER_ACTIVE: Int = Utils.dynamic(210)
        val SOUND_CONVERT_TO_DROWNED: Int = Utils.dynamic(211)
        val SOUND_BUCKET_FILL_FISH: Int = Utils.dynamic(212)
        val SOUND_BUCKET_EMPTY_FISH: Int = Utils.dynamic(213)
        val SOUND_BUBBLE_UP: Int = Utils.dynamic(214)
        val SOUND_BUBBLE_DOWN: Int = Utils.dynamic(215)
        val SOUND_BUBBLE_POP: Int = Utils.dynamic(216)
        val SOUND_BUBBLE_UP_INSIDE: Int = Utils.dynamic(217)
        val SOUND_BUBBLE_DOWN_INSIDE: Int = Utils.dynamic(218)
        val SOUND_BABY_HURT: Int = Utils.dynamic(219)
        val SOUND_BABY_DEATH: Int = Utils.dynamic(220)
        val SOUND_BABY_STEP: Int = Utils.dynamic(221)
        val SOUND_BABY_SPAWN: Int = Utils.dynamic(222)
        val SOUND_BORN: Int = Utils.dynamic(223)
        val SOUND_BLOCK_TURTLE_EGG_BREAK: Int = Utils.dynamic(224)
        val SOUND_BLOCK_TURTLE_EGG_CRACK: Int = Utils.dynamic(225)
        val SOUND_BLOCK_TURTLE_EGG_HATCH: Int = Utils.dynamic(226)
        val SOUND_TURTLE_LAY_EGG: Int = Utils.dynamic(227)
        val SOUND_BLOCK_TURTLE_EGG_ATTACK: Int = Utils.dynamic(228)
        val SOUND_BEACON_ACTIVATE: Int = Utils.dynamic(229)
        val SOUND_BEACON_AMBIENT: Int = Utils.dynamic(230)
        val SOUND_BEACON_DEACTIVATE: Int = Utils.dynamic(231)
        val SOUND_BEACON_POWER: Int = Utils.dynamic(232)
        val SOUND_CONDUIT_ACTIVATE: Int = Utils.dynamic(233)
        val SOUND_CONDUIT_AMBIENT: Int = Utils.dynamic(234)
        val SOUND_CONDUIT_ATTACK: Int = Utils.dynamic(235)
        val SOUND_CONDUIT_DEACTIVATE: Int = Utils.dynamic(236)
        val SOUND_CONDUIT_SHORT: Int = Utils.dynamic(237)
        val SOUND_SWOOP: Int = Utils.dynamic(238)
        val SOUND_BLOCK_BAMBOO_SAPLING_PLACE: Int = Utils.dynamic(239)
        val SOUND_PRE_SNEEZE: Int = Utils.dynamic(240)
        val SOUND_SNEEZE: Int = Utils.dynamic(241)
        val SOUND_AMBIENT_TAME: Int = Utils.dynamic(242)
        val SOUND_SCARED: Int = Utils.dynamic(243)
        val SOUND_BLOCK_SCAFFOLDING_CLIMB: Int = Utils.dynamic(244)
        val SOUND_CROSSBOW_LOADING_START: Int = Utils.dynamic(245)
        val SOUND_CROSSBOW_LOADING_MIDDLE: Int = Utils.dynamic(246)
        val SOUND_CROSSBOW_LOADING_END: Int = Utils.dynamic(247)
        val SOUND_CROSSBOW_SHOOT: Int = Utils.dynamic(248)
        val SOUND_CROSSBOW_QUICK_CHARGE_START: Int = Utils.dynamic(249)
        val SOUND_CROSSBOW_QUICK_CHARGE_MIDDLE: Int = Utils.dynamic(250)
        val SOUND_CROSSBOW_QUICK_CHARGE_END: Int = Utils.dynamic(251)
        val SOUND_AMBIENT_AGGRESSIVE: Int = Utils.dynamic(252)
        val SOUND_AMBIENT_WORRIED: Int = Utils.dynamic(253)
        val SOUND_CANT_BREED: Int = Utils.dynamic(254)
        val SOUND_SHIELD_BLOCK: Int = Utils.dynamic(255)
        val SOUND_LECTERN_BOOK_PLACE: Int = Utils.dynamic(256)
        val SOUND_GRINDSTONE_USE: Int = Utils.dynamic(257)
        val SOUND_BELL: Int = Utils.dynamic(258)
        val SOUND_CAMPFIRE_CRACKLE: Int = Utils.dynamic(259)
        val SOUND_ROAR: Int = Utils.dynamic(260)
        val SOUND_STUN: Int = Utils.dynamic(261)
        val SOUND_SWEET_BERRY_BUSH_HURT: Int = Utils.dynamic(262)
        val SOUND_SWEET_BERRY_BUSH_PICK: Int = Utils.dynamic(263)
        val SOUND_CARTOGRAPHY_TABLE_USE: Int = Utils.dynamic(264)
        val SOUND_STONECUTTER_USE: Int = Utils.dynamic(265)
        val SOUND_COMPOSTER_EMPTY: Int = Utils.dynamic(266)
        val SOUND_COMPOSTER_FILL: Int = Utils.dynamic(267)
        val SOUND_COMPOSTER_FILL_LAYER: Int = Utils.dynamic(268)
        val SOUND_COMPOSTER_READY: Int = Utils.dynamic(269)
        val SOUND_BARREL_OPEN: Int = Utils.dynamic(270)
        val SOUND_BARREL_CLOSE: Int = Utils.dynamic(271)
        val SOUND_RAID_HORN: Int = Utils.dynamic(272)
        val SOUND_LOOM_USE: Int = Utils.dynamic(273)
        val SOUND_AMBIENT_IN_RAID: Int = Utils.dynamic(274)
        val SOUND_UI_CARTOGRAPHY_TABLE_USE: Int = Utils.dynamic(275)
        val SOUND_UI_STONECUTTER_USE: Int = Utils.dynamic(276)
        val SOUND_UI_LOOM_USE: Int = Utils.dynamic(277)
        val SOUND_SMOKER_USE: Int = Utils.dynamic(278)
        val SOUND_BLAST_FURNACE_USE: Int = Utils.dynamic(279)
        val SOUND_SMITHING_TABLE_USE: Int = Utils.dynamic(280)
        val SOUND_SCREECH: Int = Utils.dynamic(281)
        val SOUND_SLEEP: Int = Utils.dynamic(282)
        val SOUND_FURNACE_USE: Int = Utils.dynamic(283)
        val SOUND_MOOSHROOM_CONVERT: Int = Utils.dynamic(284)
        val SOUND_MILK_SUSPICIOUSLY: Int = Utils.dynamic(285)
        val SOUND_CELEBRATE: Int = Utils.dynamic(286)
        val SOUND_JUMP_PREVENT: Int = Utils.dynamic(287)
        val SOUND_AMBIENT_POLLINATE: Int = Utils.dynamic(288)
        val SOUND_BEEHIVE_DRIP: Int = Utils.dynamic(289)
        val SOUND_BEEHIVE_ENTER: Int = Utils.dynamic(290)
        val SOUND_BEEHIVE_EXIT: Int = Utils.dynamic(291)
        val SOUND_BEEHIVE_WORK: Int = Utils.dynamic(292)
        val SOUND_BEEHIVE_SHEAR: Int = Utils.dynamic(293)
        val SOUND_HONEYBOTTLE_DRINK: Int = Utils.dynamic(294)
        val SOUND_AMBIENT_CAVE: Int = Utils.dynamic(295)
        val SOUND_RETREAT: Int = Utils.dynamic(296)
        val SOUND_CONVERT_TO_ZOMBIFIED: Int = Utils.dynamic(297)
        val SOUND_ADMIRE: Int = Utils.dynamic(298)
        val SOUND_STEP_LAVA: Int = Utils.dynamic(299)
        val SOUND_TEMPT: Int = Utils.dynamic(300)
        val SOUND_PANIC: Int = Utils.dynamic(301)
        val SOUND_ANGRY: Int = Utils.dynamic(302)
        val SOUND_AMBIENT_WARPED_FOREST: Int = Utils.dynamic(303)
        val SOUND_AMBIENT_SOULSAND_VALLEY: Int = Utils.dynamic(304)
        val SOUND_AMBIENT_NETHER_WASTES: Int = Utils.dynamic(305)
        val SOUND_AMBIENT_BASALT_DELTAS: Int = Utils.dynamic(306)
        val SOUND_AMBIENT_CRIMSON_FOREST: Int = Utils.dynamic(307)
        val SOUND_RESPAWN_ANCHOR_CHARGE: Int = Utils.dynamic(308)
        val SOUND_RESPAWN_ANCHOR_DEPLETE: Int = Utils.dynamic(309)
        val SOUND_RESPAWN_ANCHOR_SET_SPAWN: Int = Utils.dynamic(310)
        val SOUND_RESPAWN_ANCHOR_AMBIENT: Int = Utils.dynamic(311)
        val SOUND_SOUL_ESCAPE_QUIET: Int = Utils.dynamic(312)
        val SOUND_SOUL_ESCAPE_LOUD: Int = Utils.dynamic(313)
        val SOUND_RECORD_PIGSTEP: Int = Utils.dynamic(314)
        val SOUND_LINK_COMPASS_TO_LODESTONE: Int = Utils.dynamic(315)
        val SOUND_USE_SMITHING_TABLE: Int = Utils.dynamic(316)
        val SOUND_EQUIP_NETHERITE: Int = Utils.dynamic(317)
        val SOUND_AMBIENT_LOOP_WARPED_FOREST: Int = Utils.dynamic(318)
        val SOUND_AMBIENT_LOOP_SOULSAND_VALLEY: Int = Utils.dynamic(319)
        val SOUND_AMBIENT_LOOP_NETHER_WASTES: Int = Utils.dynamic(320)
        val SOUND_AMBIENT_LOOP_BASALT_DELTAS: Int = Utils.dynamic(321)
        val SOUND_AMBIENT_LOOP_CRIMSON_FOREST: Int = Utils.dynamic(322)
        val SOUND_AMBIENT_ADDITION_WARPED_FOREST: Int = Utils.dynamic(323)
        val SOUND_AMBIENT_ADDITION_SOULSAND_VALLEY: Int = Utils.dynamic(324)
        val SOUND_AMBIENT_ADDITION_NETHER_WASTES: Int = Utils.dynamic(325)
        val SOUND_AMBIENT_ADDITION_BASALT_DELTAS: Int = Utils.dynamic(326)
        val SOUND_AMBIENT_ADDITION_CRIMSON_FOREST: Int = Utils.dynamic(327)
        val SOUND_SCULK_SENSOR_POWER_ON: Int = Utils.dynamic(328)
        val SOUND_SCULK_SENSOR_POWER_OFF: Int = Utils.dynamic(329)
        val SOUND_BUCKET_FILL_POWDER_SNOW: Int = Utils.dynamic(330)
        val SOUND_BUCKET_EMPTY_POWDER_SNOW: Int = Utils.dynamic(331)
        val SOUND_POINTED_DRIPSTONE_CAULDRON_DRIP_LAVA: Int = Utils.dynamic(332)
        val SOUND_POINTED_DRIPSTONE_CAULDRON_DRIP_WATER: Int = Utils.dynamic(333)
        val SOUND_POINTED_DRIPSTONE_DRIP_LAVA: Int = Utils.dynamic(334)
        val SOUND_POINTED_DRIPSTONE_DRIP_WATER: Int = Utils.dynamic(335)
        val SOUND_CAVE_VINES_PICK_BERRIES: Int = Utils.dynamic(336)
        val SOUND_BIG_DRIPLEAF_TILT_DOWN: Int = Utils.dynamic(337)
        val SOUND_BIG_DRIPLEAF_TILT_UP: Int = Utils.dynamic(338)
        val SOUND_COPPER_WAX_ON: Int = Utils.dynamic(339)
        val SOUND_COPPER_WAX_OFF: Int = Utils.dynamic(340)
        val SOUND_SCRAPE: Int = Utils.dynamic(341)
        val SOUND_PLAYER_HURT_DROWN: Int = Utils.dynamic(342)
        val SOUND_PLAYER_HURT_ON_FIRE: Int = Utils.dynamic(343)
        val SOUND_PLAYER_HURT_FREEZE: Int = Utils.dynamic(344)
        val SOUND_USE_SPYGLASS: Int = Utils.dynamic(345)
        val SOUND_STOP_USING_SPYGLASS: Int = Utils.dynamic(346)
        val SOUND_AMETHYST_BLOCK_CHIME: Int = Utils.dynamic(347)
        val SOUND_AMBIENT_SCREAMER: Int = Utils.dynamic(348)
        val SOUND_HURT_SCREAMER: Int = Utils.dynamic(349)
        val SOUND_DEATH_SCREAMER: Int = Utils.dynamic(350)
        val SOUND_MILK_SCREAMER: Int = Utils.dynamic(351)
        val SOUND_JUMP_TO_BLOCK: Int = Utils.dynamic(352)
        val SOUND_PRE_RAM: Int = Utils.dynamic(353)
        val SOUND_PRE_RAM_SCREAMER: Int = Utils.dynamic(354)
        val SOUND_RAM_IMPACT: Int = Utils.dynamic(355)
        val SOUND_RAM_IMPACT_SCREAMER: Int = Utils.dynamic(356)
        val SOUND_SQUID_INK_SQUIRT: Int = Utils.dynamic(357)
        val SOUND_GLOW_SQUID_INK_SQUIRT: Int = Utils.dynamic(358)
        val SOUND_CONVERT_TO_STRAY: Int = Utils.dynamic(359)
        val SOUND_CAKE_ADD_CANDLE: Int = Utils.dynamic(360)
        val SOUND_EXTINGUISH_CANDLE: Int = Utils.dynamic(361)
        val SOUND_AMBIENT_CANDLE: Int = Utils.dynamic(362)
        val SOUND_BLOCK_CLICK: Int = Utils.dynamic(363)
        val SOUND_BLOCK_CLICK_FAIL: Int = Utils.dynamic(364)
        val SOUND_SCULK_CATALYST_BLOOM: Int = Utils.dynamic(365)
        val SOUND_SCULK_SHRIEKER_SHRIEK: Int = Utils.dynamic(366)
        val SOUND_WARDEN_NEARBY_CLOSE: Int = Utils.dynamic(367)
        val SOUND_WARDEN_NEARBY_CLOSER: Int = Utils.dynamic(368)
        val SOUND_WARDEN_NEARBY_CLOSEST: Int = Utils.dynamic(369)
        val SOUND_WARDEN_SLIGHTLY_ANGRY: Int = Utils.dynamic(370)
        val SOUND_RECORD_OTHERSIDE: Int = Utils.dynamic(371)
        val SOUND_TONGUE: Int = Utils.dynamic(372)
        val SOUND_CRACK_IRON_GOLEM: Int = Utils.dynamic(373)
        val SOUND_REPAIR_IRON_GOLEM: Int = Utils.dynamic(374)
        val SOUND_LISTENING: Int = Utils.dynamic(375)
        val SOUND_HEARTBEAT: Int = Utils.dynamic(376)
        val SOUND_HORN_BREAK: Int = Utils.dynamic(377)
        val SOUND_SCULK_PLACE: Int = Utils.dynamic(378)
        val SOUND_SCULK_SPREAD: Int = Utils.dynamic(379)
        val SOUND_SCULK_CHARGE: Int = Utils.dynamic(380)
        val SOUND_SCULK_SENSOR_PLACE: Int = Utils.dynamic(381)
        val SOUND_SCULK_SHRIEKER_PLACE: Int = Utils.dynamic(382)
        val SOUND_GOAT_CALL_0: Int = Utils.dynamic(383)
        val SOUND_GOAT_CALL_1: Int = Utils.dynamic(384)
        val SOUND_GOAT_CALL_2: Int = Utils.dynamic(385)
        val SOUND_GOAT_CALL_3: Int = Utils.dynamic(386)
        val SOUND_GOAT_CALL_4: Int = Utils.dynamic(387)
        val SOUND_GOAT_CALL_5: Int = Utils.dynamic(388)
        val SOUND_GOAT_CALL_6: Int = Utils.dynamic(389)
        val SOUND_GOAT_CALL_7: Int = Utils.dynamic(390)
        val SOUND_GOAT_CALL_8: Int = Utils.dynamic(391)
        val SOUND_GOAT_CALL_9: Int = Utils.dynamic(392)
        val SOUND_GOAT_HARMONY_0: Int = Utils.dynamic(393)
        val SOUND_GOAT_HARMONY_1: Int = Utils.dynamic(394)
        val SOUND_GOAT_HARMONY_2: Int = Utils.dynamic(395)
        val SOUND_GOAT_HARMONY_3: Int = Utils.dynamic(396)
        val SOUND_GOAT_HARMONY_4: Int = Utils.dynamic(397)
        val SOUND_GOAT_HARMONY_5: Int = Utils.dynamic(398)
        val SOUND_GOAT_HARMONY_6: Int = Utils.dynamic(399)
        val SOUND_GOAT_HARMONY_7: Int = Utils.dynamic(400)
        val SOUND_GOAT_HARMONY_8: Int = Utils.dynamic(401)
        val SOUND_GOAT_HARMONY_9: Int = Utils.dynamic(402)
        val SOUND_GOAT_MELODY_0: Int = Utils.dynamic(403)
        val SOUND_GOAT_MELODY_1: Int = Utils.dynamic(404)
        val SOUND_GOAT_MELODY_2: Int = Utils.dynamic(405)
        val SOUND_GOAT_MELODY_3: Int = Utils.dynamic(406)
        val SOUND_GOAT_MELODY_4: Int = Utils.dynamic(407)
        val SOUND_GOAT_MELODY_5: Int = Utils.dynamic(408)
        val SOUND_GOAT_MELODY_6: Int = Utils.dynamic(409)
        val SOUND_GOAT_MELODY_7: Int = Utils.dynamic(410)
        val SOUND_GOAT_MELODY_8: Int = Utils.dynamic(411)
        val SOUND_GOAT_MELODY_9: Int = Utils.dynamic(412)
        val SOUND_GOAT_BASS_0: Int = Utils.dynamic(413)
        val SOUND_GOAT_BASS_1: Int = Utils.dynamic(414)
        val SOUND_GOAT_BASS_2: Int = Utils.dynamic(415)
        val SOUND_GOAT_BASS_3: Int = Utils.dynamic(416)
        val SOUND_GOAT_BASS_4: Int = Utils.dynamic(417)
        val SOUND_GOAT_BASS_5: Int = Utils.dynamic(418)
        val SOUND_GOAT_BASS_6: Int = Utils.dynamic(419)
        val SOUND_GOAT_BASS_7: Int = Utils.dynamic(420)
        val SOUND_GOAT_BASS_8: Int = Utils.dynamic(421)
        val SOUND_GOAT_BASS_9: Int = Utils.dynamic(422)

        // 423-425 are unused
        val SOUND_IMITATE_WARDEN: Int = Utils.dynamic(426)
        val SOUND_LISTENING_ANGRY: Int = Utils.dynamic(427)
        val SOUND_ITEM_GIVEN: Int = Utils.dynamic(428)
        val SOUND_ITEM_TAKEN: Int = Utils.dynamic(429)
        val SOUND_DISAPPEARED: Int = Utils.dynamic(430)
        val SOUND_REAPPEARED: Int = Utils.dynamic(431)
        val SOUND_MILK_DRINK: Int = Utils.dynamic(432)
        val SOUND_FROGSPAWN_HATCHED: Int = Utils.dynamic(433)
        val SOUND_LAY_SPAWN: Int = Utils.dynamic(434)
        val SOUND_FROGSPAWN_BREAK: Int = Utils.dynamic(435)
        val SOUND_SONIC_BOOM: Int = Utils.dynamic(436)
        val SOUND_SONIC_CHARGE: Int = Utils.dynamic(437)
        val SOUND_ITEM_THROWN: Int = Utils.dynamic(438)
        val SOUND_RECORD_5: Int = Utils.dynamic(439)
        val SOUND_CONVERT_TO_FROG: Int = Utils.dynamic(440)
        val SOUND_RECORD_PLAYING: Int = Utils.dynamic(441)
        val SOUND_ENCHANTING_TABLE_USE: Int = Utils.dynamic(442)
        val SOUND_STEP_SAND: Int = Utils.dynamic(443)
        val SOUND_DASH_READY: Int = Utils.dynamic(444)
        val SOUND_BUNDLE_DROP_CONTENTS: Int = Utils.dynamic(445)
        val SOUND_BUNDLE_INSERT: Int = Utils.dynamic(446)
        val SOUND_BUNDLE_REMOVE_ONE: Int = Utils.dynamic(447)
        val SOUND_PRESSURE_PLATE_CLICK_OFF: Int = Utils.dynamic(448)
        val SOUND_PRESSURE_PLATE_CLICK_ON: Int = Utils.dynamic(449)
        val SOUND_BUTTON_CLICK_OFF: Int = Utils.dynamic(450)
        val SOUND_BUTTON_CLICK_ON: Int = Utils.dynamic(451)
        val SOUND_DOOR_OPEN: Int = Utils.dynamic(452)
        val SOUND_DOOR_CLOSE: Int = Utils.dynamic(453)
        val SOUND_TRAPDOOR_OPEN: Int = Utils.dynamic(454)
        val SOUND_TRAPDOOR_CLOSE: Int = Utils.dynamic(455)
        val SOUND_FENCE_GATE_OPEN: Int = Utils.dynamic(456)
        val SOUND_FENCE_GATE_CLOSE: Int = Utils.dynamic(457)
        val SOUND_INSERT: Int = Utils.dynamic(458)
        val SOUND_PICKUP: Int = Utils.dynamic(459)
        val SOUND_INSERT_ENCHANTED: Int = Utils.dynamic(460)
        val SOUND_PICKUP_ENCHANTED: Int = Utils.dynamic(461)
        val SOUND_BRUSH: Int = Utils.dynamic(462)
        val SOUND_BRUSH_COMPLETED: Int = Utils.dynamic(463)
        val SOUND_SHATTER_DECORATED_POT: Int = Utils.dynamic(464)
        val SOUND_BREAK_DECORATED_POD: Int = Utils.dynamic(465)
        val SOUND_SNIFFER_EGG_CRACK: Int = Utils.dynamic(466)
        val SOUND_SNIFFER_EGG_HATCHED: Int = Utils.dynamic(467)

        @JvmField
        val SOUND_WAXED_SIGN_INTERACT_FAIL: Int = Utils.dynamic(468)
        val SOUND_RECORD_RELIC: Int = Utils.dynamic(469)
        val SOUND_BUMP: Int = Utils.dynamic(470)
        val SOUND_PUMPKIN_CARVE: Int = Utils.dynamic(471)
        val SOUND_CONVERT_HUSK_TO_ZOMBIE: Int = Utils.dynamic(472)
        val SOUND_PIG_DEATH: Int = Utils.dynamic(473)
        val SOUND_HOGLIN_ZOMBIFIED: Int = Utils.dynamic(474)
        val SOUND_AMBIENT_UNDERWATER_ENTER: Int = Utils.dynamic(475)
        val SOUND_AMBIENT_UNDERWATER_EXIT: Int = Utils.dynamic(476)
        val SOUND_BOTTLE_FILL: Int = Utils.dynamic(477)
        val SOUND_BOTTLE_EMPTY: Int = Utils.dynamic(478)
        val SOUND_CRAFTER_CRAFT: Int = Utils.dynamic(479)
        val SOUND_CRAFTER_FAILED: Int = Utils.dynamic(480)
        val SOUND_BLOCK_DECORATED_POT_INSERT: Int = Utils.dynamic(481)
        val SOUND_BLOCK_DECORATED_POT_INSERT_FAIL: Int = Utils.dynamic(482)
        val SOUND_CRAFTER_DISABLE_SLOT: Int = Utils.dynamic(483)
        val SOUND_TRIAL_SPAWNER_OPEN_SHUTTER: Int = Utils.dynamic(484)
        val SOUND_TRIAL_SPAWNER_EJECT_ITEM: Int = Utils.dynamic(485)
        val SOUND_TRIAL_SPAWNER_DETECT_PLAYER: Int = Utils.dynamic(486)
        val SOUND_TRIAL_SPAWNER_SPAWN_MOB: Int = Utils.dynamic(487)
        val SOUND_TRIAL_SPAWNER_CLOSE_SHUTTER: Int = Utils.dynamic(488)
        val SOUND_TRIAL_SPAWNER_AMBIENT: Int = Utils.dynamic(489)
        val SOUND_BLOCK_COPPER_BULB_TURN_ON: Int = Utils.dynamic(490)
        val SOUND_BLOCK_COPPER_BULB_TURN_OFF: Int = Utils.dynamic(491)
        val SOUND_AMBIENT_IN_AIR: Int = Utils.dynamic(492)
        val SOUND_BREEZE_WIND_CHARGE_BURST: Int = Utils.dynamic(493)
        val SOUND_IMITATE_BREEZE: Int = Utils.dynamic(494)
        val SOUND_MOB_ARMADILLO_BRUSH: Int = Utils.dynamic(495)
        val SOUND_MOB_ARMADILLO_SCUTE_DROP: Int = Utils.dynamic(496)
        val SOUND_ARMOR_EQUIP_WOLF: Int = Utils.dynamic(497)
        val SOUND_ARMOR_UNEQUIP_WOLF: Int = Utils.dynamic(498)
        val SOUND_REFLECT: Int = Utils.dynamic(499)
        val SOUND_VAULT_OPEN_SHUTTER: Int = Utils.dynamic(500)
        val SOUND_VAULT_CLOSE_SHUTTER: Int = Utils.dynamic(501)
        val SOUND_VAULT_EJECT_ITEM: Int = Utils.dynamic(502)
        val SOUND_VAULT_INSERT_ITEM: Int = Utils.dynamic(503)
        val SOUND_VAULT_INSERT_ITEM_FAIL: Int = Utils.dynamic(504)
        val SOUND_VAULT_AMBIENT: Int = Utils.dynamic(505)
        val SOUND_VAULT_ACTIVATE: Int = Utils.dynamic(506)
        val SOUND_VAULT_DEACTIVATE: Int = Utils.dynamic(507)
        val SOUND_HURT_REDUCED: Int = Utils.dynamic(508)
        val SOUND_WIND_CHARGE_BURST: Int = Utils.dynamic(509)
        val SOUND_IMITATE_BOGGED: Int = Utils.dynamic(510)
        val SOUND_ARMOR_CRACK_WOLF: Int = Utils.dynamic(511)
        val SOUND_ARMOR_BREAK_WOLF: Int = Utils.dynamic(512)
        val SOUND_ARMOR_REPAIR_WOLF: Int = Utils.dynamic(513)
        val SOUND_MACE_SMASH_AIR: Int = Utils.dynamic(514)
        val SOUND_MACE_SMASH_GROUND: Int = Utils.dynamic(515)
        val SOUND_TRAIL_SPAWNER_CHARGE_ACTIVATE: Int = Utils.dynamic(516)
        val SOUND_TRAIL_SPAWNER_AMBIENT_OMINOUS: Int = Utils.dynamic(517)
        val SOUND_OMINOUS_ITEM_SPAWNER_SPAWN_ITEM: Int = Utils.dynamic(518)
        val SOUND_OMINOUS_BOTTLE_END_USE: Int = Utils.dynamic(519)
        val SOUND_MACE_SMASH_HEAVY_GROUND: Int = Utils.dynamic(520)
        val SOUND_OMINOUS_ITEM_SPAWNER_SPAWN_ITEM_BEGIN: Int = Utils.dynamic(521)
        val SOUND_APPLY_EFFECT_BAD_OMEN: Int = Utils.dynamic(523)
        val SOUND_APPLY_EFFECT_RAID_OMEN: Int = Utils.dynamic(524)
        val SOUND_APPLY_EFFECT_TRIAL_OMEN: Int = Utils.dynamic(525)
        val SOUND_OMINOUS_ITEM_SPAWNER_ABOUT_TO_SPAWN_ITEM: Int = Utils.dynamic(526)
        val SOUND_CREATOR: Int = Utils.dynamic(527)
        val SOUND_RECORD_CREATOR_MUSIC_BOX: Int = Utils.dynamic(528)
        val SOUND_RECORD_PRECIPICE: Int = Utils.dynamic(529)
        val SOUND_VAULT_REJECT_REWARDED_PLAYER: Int = Utils.dynamic(530)
        val IMITATE_DROWNED: Int = Utils.dynamic(531)
        val IMITATE_CREAKING: Int = Utils.dynamic(532)
        val BUNDLE_INSERT_FAIL: Int = Utils.dynamic(533)
        val SPONGE_ABSORB: Int = Utils.dynamic(534)
        val BLOCK_CREAKING_HEART_TRAIL: Int = Utils.dynamic(536)
        val CREAKING_HEART_SPAWN: Int = Utils.dynamic(537)
        val ACTIVATE: Int = Utils.dynamic(538)
        val DEACTIVATE: Int = Utils.dynamic(539)
        val FREEZE: Int = Utils.dynamic(540)
        val UNFREEZE: Int = Utils.dynamic(541)
        val OPEN: Int = Utils.dynamic(542)
        val OPEN_LONG: Int = Utils.dynamic(543)
        val CLOSE: Int = Utils.dynamic(544)
        val CLOSE_LONG: Int = Utils.dynamic(545)
        val IMITATE_PHANTOM: Int = Utils.dynamic(546)
        val IMITATE_ZOGLIN: Int = Utils.dynamic(547)
        val IMITATE_GUARDIAN: Int = Utils.dynamic(548)
        val IMITATE_RAVAGER: Int = Utils.dynamic(549)
        val IMITATE_PILLAGER: Int = Utils.dynamic(550)
        val PLACE_IN_WATER: Int = Utils.dynamic(551)
        val STATE_CHANGE: Int = Utils.dynamic(552)
        val IMITATE_HAPPY_GHAST: Int = Utils.dynamic(553)
        val UNEQUIP_GENERIC: Int = Utils.dynamic(554)
        val RECORD_TEARS: Int = Utils.dynamic(555)
        val THE_END_LIGHT_FLASH: Int = Utils.dynamic(556)
        val LEAD_LEASH: Int = Utils.dynamic(557)
        val LEAD_UNLEASH: Int = Utils.dynamic(558)
        val LEAD_BREAK: Int = Utils.dynamic(559)
        val UNSADDLE: Int = Utils.dynamic(560)
        val UNDEFINED: Int = Utils.dynamic(561)
    }
}
